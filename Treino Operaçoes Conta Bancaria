
public class Conta {

	private int numero;
	private String nome;
	private double saldo;
	private double limite;

	public Conta() {

	}

	public Conta(int numero, String nome, double saldo, double limite) {
		this.numero = numero;
		this.nome = nome;
		this.saldo = saldo;
		this.limite = limite;
	}

	public int getNumero() {
		return numero;
	}

	public String getNome() {
		return nome;
	}

	public double getSaldo() {
		return saldo;
	}

	public double getLimite() {
		return limite;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public void setNumero(int numero) {
		this.numero = numero;
	}

	public void setLimite(double limite) {
		this.limite = limite;
	}

	public void setSaldo(double saldo) {
		this.saldo = saldo;
	}

	public void saca(double quantidade) {
		if (quantidade >= 0) {
			double novoSaldo = this.saldo - quantidade;
			this.saldo = novoSaldo;
		} else {
			System.out.println("Não é possivel sacar valor negativo!");
		}
	}

	public void deposita(double quantidade) {
		if (quantidade >= 0) {
			double novoSaldo = this.saldo + quantidade;
			this.saldo = novoSaldo;
		} else {
			System.out.println("Não é possivel depositar valor negativo!");
		}
	}

	public void transfere(Conta destino, double quantidade) {
		if (quantidade < 0) {
			if (quantidade < this.saldo) {
				this.saldo = this.saldo - quantidade;
				destino.saldo = destino.saldo + quantidade;
			}
		} else {
			System.out.println("Saldo disponivel insuficiente!");
		}

	}

	public void mostrar() {
		System.out.println("\nNumero da conta: " + numero + "\nNome do dono da conta: " + nome + "\nSaldo atual: "
				+ saldo + "\nLimite disponivel: " + limite);
	}

}


_________________________________________________________________________________________________________________


public class Main {

	public static void main(String[] args) {

		Conta minhaConta = new Conta(1, "Henrique", 5000, 10000);
		Conta minhaConta2 = new Conta(2, "Guilherme", 1000, 3000);

		minhaConta.mostrar();
		minhaConta.saca(1000);
		minhaConta.mostrar();
		minhaConta.deposita(5000);
		minhaConta.mostrar();
		minhaConta.deposita(-10);
		minhaConta.mostrar();
		minhaConta.saca(-5000);
		minhaConta.mostrar();

		minhaConta2.mostrar();
		minhaConta2.transfere(minhaConta, 500);
		minhaConta2.mostrar();
		minhaConta.mostrar();
		
		minhaConta2.transfere(minhaConta, 1000);
		minhaConta2.mostrar();
		minhaConta.mostrar();
		
		minhaConta2.transfere(minhaConta, 0);
		minhaConta2.mostrar();
		minhaConta.mostrar();

	}

}
